FROM kalilinux/kali-rolling

# systemctl replacement:
ADD https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py /usr/local/bin/systemctl

# download pip in container using get-pip script:
ADD https://bootstrap.pypa.io/get-pip.py /root/get-pip.py

ENV DEBIAN_FRONTEND=noninteractive

RUN mkdir /run/sshd &&\
    dpkg --add-architecture i386 &&\
    apt-get update -y && apt-get install -y apt-utils ca-certificates ssh &&\
    echo "PubKeyAuthentication yes" >> /etc/ssh/sshd_config &&\
    sed -i 's/http/https/' /etc/apt/sources.list &&\
    apt-get update -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get clean -y &&\
    chmod +x /usr/local/bin/systemctl &&\
    mv /usr/bin/systemctl /usr/bin/systemctl.old &&\
    ln -s /usr/local/bin/systemctl /usr/bin/systemctl &&\
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config &&\
    echo '#!/bin/bash' > /root/connect.sh && echo 'openvpn --config /root/shared/config.ovpn --daemon' >> /root/connect.sh &&\
    chmod +x /root/connect.sh
RUN apt install -y \
        sudo dirbuster upx tshark python2 lsof iputils-ping net-tools man-db exploitdb \
        libcanberra-gtk3-module openvpn nano coreutils procps \
        build-essential jq strace ltrace rubygems gcc dnsutils netcat-traditional p7zip-full \
        gcc-multilib libdbus-glib-1-2 vim gdb gdb-multiarch python3 python3-pip \
        python3-dev libssl-dev libffi-dev libmpc-dev git make libpcre3-dev libdb-dev \
        libxt-dev meson cmake cmake-data ninja-build pkg-config libxaw7-dev libc6 \
        libstdc++6 qttools5-dev vim wget curl httpie \
        kali-tools-top10 libqt5svg5-dev qtbase5-dev qtwebengine5-dev unzip \
        g++ gcc git-core 
RUN pip3 install 'unicorn==1.0.2rc3' 'pwntools==4.3.1' keystone-engine  capstone ropper &&\
    mkdir /tools && chmod 777 /tools &&\
    useradd kali && usermod -aG sudo kali && echo "kali ALL=(ALL) NOPASSWD:/tools/radare2/sys/install.sh" >> /etc/sudoers

# Firefox
RUN cd /tools && wget -O firefox.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US" && tar xvjf firefox.tar.bz2 && mv firefox /usr/lib/ && ln -s /usr/lib/firefox/firefox /bin/firefox && rm -f /tools/firefox.tar.bz2

# ROPGadget
RUN cd /tools && git clone https://github.com/JonathanSalwan/ROPgadget

# Rizin (radare2 fork, but better), rz-ghidra (decompiler plugin to rizin) and Cutter (rizin GUI tool)
#RUN cd /tools && git clone --recurse-submodules https://github.com/rizinorg/cutter.git && \
#    mkdir -p /tools/cutter/build && \
#    cd /tools/cutter/build && \
#    cmake -DCUTTER_USE_BUNDLED_RIZIN=ON .. && \
#    cmake --build . -j $(grep -c ^processor /proc/cpuinfo) &&\
#    ln -s /tools/cutter/build/cutter /bin/cutter
#RUN cd /tools/cutter/rizin && git submodule update --init && meson build && ninja -C build && ninja -C build install
#RUN cd /tools && git clone https://github.com/rizinorg/rz-ghidra.git && cd rz-ghidra && git submodule init && git submodule update && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=~/.local .. && make && make install

# PwnDBG
#RUN cd /tools && git clone https://github.com/pwndbg/pwndbg && cd pwndbg && git checkout stable && sed -i 's/ python-pip / /' ./setup.sh && ./setup.sh

# PyCharm
RUN cd /tools && wget https://download-cf.jetbrains.com/python/pycharm-community-2020.3.3.tar.gz && tar -xvf /tools/pycharm* && ln -s /tools/pycharm*/bin/pycharm.sh /usr/bin/pycharm && rm /tools/*.tar.gz
